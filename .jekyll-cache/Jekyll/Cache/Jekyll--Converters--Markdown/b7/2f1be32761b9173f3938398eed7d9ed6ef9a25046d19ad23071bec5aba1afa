I"h<h1 id="nodejs-视频知识-01">NodeJs-视频知识-01</h1>

<h2 id="一表单数据的提交与解析">一.表单数据的提交与解析</h2>

<ul>
  <li>
    <p>req  –request 请求信息;</p>
  </li>
  <li>
    <p>res  –response 接收的响应信息(返回信息);</p>
  </li>
  <li>
    <p>req.url –请求的链接;</p>
  </li>
  <li>
    <p>编码格式设置:</p>

    <ul>
      <li>
        <p><em>res.writeHead(200, {‘Content-Type’: ‘text/html; charset=utf8’});</em></p>

        <p><strong>text/html</strong>的意思是将文件的content-type设置为text/html的形式，浏览器在获取到这种文件时会自动调用html的解析器对文件进行相应的处理。</p>

        <p><strong>text/plain</strong>的意思是将文件设置为纯文本的形式，浏览器在获取到这种文件时并不会对其进行处理。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><code class="highlighter-rouge">querystring</code> 模块提供用于解析和格式化 URL 查询字符串的实用工具。</p>
  </li>
</ul>

<h3 id="get请求">GET请求</h3>

<p><strong>接收Get</strong></p>

<ol>
  <li>
    <p>get参数在req.url上</p>
  </li>
  <li>
    <p>使用url.parse将数据由字符串转变为obj;</p>
  </li>
</ol>

<p><strong>接收Post</strong></p>

<p>当请求这个页面时，如果post数据中没有name和url，则返回一个提交页面；如果有name和url，则打印。</p>

<ol>
  <li>post请求会触发”data”事件。</li>
  <li>请求结束，会触发”end”事件。</li>
</ol>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var http=require('http');
var url=require('url');
var qs=require('querystring');
var server=http.createServer(function(req,res) {
    if (req.method == "GET") {
        doGet(req, res);
    } else if (req.method == "POST") {
        doPost(req, res);
    }else{
        res.end();
    }
});
server.listen(8080,'127.0.0.1');
console.log('Server running at http://127.0.0.1:8080/');
function doGet(req,res){
    res.writeHead(200,{'Content-Type':'text/html'});
        res.write('<span class="nt">&lt;html&gt;</span>');
        res.write('<span class="nt">&lt;head&gt;</span>');
        res.write('<span class="nt">&lt;title&gt;</span>');
        res.write('<span class="nt">&lt;/title&gt;</span>');
        res.write('<span class="nt">&lt;/head&gt;</span>');
        res.write('<span class="nt">&lt;body&gt;</span>');
        res.write('<span class="nt">&lt;form</span> <span class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>');
        res.write('<span class="nt">&lt;html&gt;</span>');
        res.write('username:<span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">"username"</span><span class="nt">&gt;</span>');
        res.write('password:<span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">"paswword"</span> <span class="na">type=</span><span class="s">"password"</span><span class="nt">&gt;&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span><span class="nt">&gt;</span>');
        res.write('<span class="nt">&lt;/form&gt;</span>');
        res.write('<span class="nt">&lt;/body&gt;</span>');
        res.write('<span class="nt">&lt;/html&gt;</span>');
        res.end();
}
function doPost(req,res){
    //一旦当请求接收到数据就调用这个函数
    //formDate 暂存请求信息
    var formDate="";
    req.on('data',function(data){
        //console.log(data.toString());
        //每当接收到请求体数据，累加到formDate中
        formDate+=data;
    });
    //所有数据包发完
    //在end事件触发后，通过querystring.parse将post解析为真正的POST请求格式，然后向客户端返回。
    req.on('end',function () {
     // 解析参数,将一个字符串反序列化为一个对象
        var obj=qs.parse(formDate);
        console.log(obj);//{ username: 'asdas', paswword: '333' }
        res.end();
    })

}
</code></pre></div></div>

<hr />

<h3 id="分离成三个文件的写法">分离成三个文件的写法</h3>

<p><strong>1. 在httpGet与httpPost 中暴露方法:</strong></p>

<p><strong><em>exports.doGet=doGet;</em></strong></p>

<p><strong><em>exports.doPost=doPost;</em></strong></p>

<p><strong>2.在app.js中引入,并使用get.doGet/post.doPost调用</strong></p>

<p><strong><em>var get=require(‘./httpGet’);
var post=require(‘./httpPost’);</em></strong></p>

<p><strong>3.案例:</strong></p>

<ul>
  <li>app.js</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var http=require('http');
var url=require('url');
var qs=require('querystring');

//引入外部调用的方法
var get=require('./httpGet');
var post=require('./httpPost');
var server=http.createServer(function(req,res) {
    if (req.method == "GET") {
    //使用get.进行调用
        get.doGet(req, res);
    } else if (req.method == "POST") {
        post.doPost(req, res);
    }else{
        res.end();
    }
});
server.listen(8080,'127.0.0.1');
console.log('Server running at http://127.0.0.1:8080/');
</code></pre></div></div>

<ul>
  <li>httpGet.js</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>function doGet(req,res){
    //console.log(req.url);
    //var u=url.parse(req.url).query;
    // obj=qs.parse(url.parse(req.url).query);
    //console.log(obj);
    res.writeHead(200,{'Content-Type':'text/html;charset=utf8'});
    res.write('<span class="nt">&lt;html&gt;</span>');
    res.write('<span class="nt">&lt;head&gt;</span>');
    res.write('<span class="nt">&lt;title&gt;</span>');
    res.write('<span class="nt">&lt;/title&gt;</span>');
    res.write('<span class="nt">&lt;/head&gt;</span>');
    res.write('<span class="nt">&lt;body&gt;</span>');
    res.write('<span class="nt">&lt;form</span> <span class="na">method=</span><span class="s">"post"</span><span class="nt">&gt;</span>');
    res.write('账号:<span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">"username"</span><span class="nt">&gt;</span>');
    res.write('密码:<span class="nt">&lt;input</span> <span class="na">name=</span><span class="s">"paswword"</span> <span class="na">type=</span><span class="s">"password"</span><span class="nt">&gt;&lt;input</span> <span class="na">type=</span><span class="s">"submit"</span><span class="nt">&gt;</span>');
    res.write('<span class="nt">&lt;/form&gt;</span>');
    res.write('<span class="nt">&lt;/body&gt;</span>');
    res.write('<span class="nt">&lt;/html&gt;</span>');
    res.end();
}
//增加将方法暴露出去的模块
exports.doGet=doGet;
</code></pre></div></div>

<ul>
  <li>httpPost</li>
</ul>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>var qs=require('querystring');
function doPost(req,res){
    res.writeHead(200,{'Content-Type':'text/html;charset=utf8'});
    res.write("&lt;h1&gt;面朝大海,春暖花开&lt;/h1&gt;");
    // console.log(req);
    //一旦当请求接收到数据就调用这个函数
    var formDate="";
    req.on('data',function(data){
        //console.log(data.toString());
        formDate+=data;
    });
    //所有数据包发完
    req.on('end',function () {
        var obj=qs.parse(formDate);
        console.log(obj);//{ username: 'asdas', paswword: '333' }
        res.end();
    })
}
//增加将方法暴露出去的模块
exports.doPost=doPost;
</code></pre></div></div>

:ET