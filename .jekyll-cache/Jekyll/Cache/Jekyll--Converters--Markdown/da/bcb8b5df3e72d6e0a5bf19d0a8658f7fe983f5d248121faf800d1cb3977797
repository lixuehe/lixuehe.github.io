I"5<h1 id="git-hub板块明细及内容分工">Git Hub–板块明细及内容分工</h1>

<p>###　板块一:胡俢廷，涉及到下边会讲解到的命令可以不写</p>

<p>http://www.imooc.com/article/269298</p>

<h4 id="铺垫git-的一些基本常用命令介绍并且可以熟练运用">铺垫:git 的一些基本（常用）命令介绍:并且可以熟练运用</h4>

<ul>
  <li>
    <p>git init</p>
  </li>
  <li>
    <p>git config –global user.name XXX  #用户名</p>

    <p>git config –global user.email XXX   #用户邮箱</p>

    <p>git config –list  #查看用户信息</p>
  </li>
  <li>
    <p>git add    git commit –m “XXXX”         git status    git log/git log –graph  #以图形化（节点）展示当前git库的`提交信息。</p>
  </li>
  <li>
    <p>git reset   /git reset –hard</p>
  </li>
  <li>
    <p>git push origin 分支名</p>
  </li>
  <li>
    <p>git pull   /git fetch   git rm  / git diff</p>
  </li>
  <li>
    <p>等等…</p>
  </li>
</ul>

<h2 id="一本地库与远程库的连接">一.本地库与远程库的连接；</h2>

<h4 id="1初始化一个本地库连接远程库的方式">1.初始化一个本地库，连接远程库的方式；</h4>

<h4 id="-可以简单介绍两种连接方式的区别">@ 可以简单介绍两种连接方式的区别</h4>

<h4 id="2克隆远程库">2.克隆远程库;</h4>

<h4 id="-克隆之后的结果">@ 克隆之后的结果</h4>

<h4 id="3两种方式的优缺点">3.两种方式的优缺点</h4>

<hr />

<h3 id="板块二李雪鹤刘川达到可以很熟练的操作代码">板块二：李雪鹤\刘川　－－达到可以很熟练的操作代码</h3>

<h2 id="二版本回退">二．版本回退</h2>

<h4 id="1撤销修改">1.撤销修改；</h4>

<h4 id="2查看版本方法">2.查看版本方法；</h4>

<h2 id="三分支管理">　三．分支管理</h2>

<h4 id="1本地分支与远程分支远分支与本地分支的创建连接删除内容拉取">1．本地分支与远程分支，远分支与本地分支的创建,连接,删除,内容拉取；</h4>

<h4 id="2--master分支与dev分支的作用">2.  master分支与dev分支的作用；</h4>

<h4 id="3合并分支">3.　合并分支；</h4>

<h4 id="4模拟及解决冲突真实模拟使用">4.　模拟及解决冲突；真实模拟使用</h4>

<ul>
  <li>操作同一份文件导致的冲突：  https://lyc984006207.iteye.com/blog/2397909,</li>
  <li>https://blog.csdn.net/qq_31567335/article/details/85037945</li>
</ul>

<h4 id="git产生冲突的情况汇总">git产生冲突的情况汇总:</h4>

<p>本地拉取：
 1，当远端有更新，本地库没有有变化，拉取操作远端会覆盖本地库（远端版本高于本地）
   2，当远端修改，本地库也有修改，拉取操作会产生冲突文件（远端版本和本地版本冲突）
 3，当本地库修改，而远端没有变化，拉取不会产生变化（本地版本高于远端版本）
 4，当本地库版本低于远端版本，则无法推送，必须先拉取在操作，否则报错</p>

<p>分支合并：
 当资源分支版本高于目标分支时，合并，资源分支同名文件会覆盖目标分支；
 当目标分支版本高于资源分支时，合并，提示Already up-to-date.（已经更新），目标分支内容不会变化；
 当目标分支和资源分支同名文件都有改动时，会报冲突，需手动解决；                                                                   –</p>

<p>避免合并冲突方案：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> 如果目标分支（例如master）被保护起来，其他分支只能通过发起mergeRequest合并请求来合并的话，目标分支的版本始终是低于资源支的，也就不会产生冲突文件了，这样既达到了保护重要分支的目的，也解决了合并冲突的问题。 --------------------- 版权声明：本文为CSDN博主「Scienct_Sniper」的原创文章，遵循CC 4.0 by-sa版权协议，转载请附上原文出处链接及本声明。 原文链接：https://blog.csdn.net/m0_37600150/article/details/80611185
</code></pre></div></div>

<hr />

<h3 id="板块三李源将git-hub流程整理成图形化最好">板块三．李源－－－将git hub　流程整理成图形化最好</h3>

<h3 id="四组员与组长的git分工">四.组员与组长的git分工:</h3>

<h4 id="1组员的工作">1.组员的工作;</h4>

<h4 id="2组长的工作">2.组长的工作:</h4>

<h4 id="五常见的问题">五．常见的问题</h4>

<ol>
  <li>解决每次都需要输入密码的问题;</li>
  <li>第一次创建分支后,使用git branch没有东西</li>
  <li>push的时候不行,可以加入–allow……..参数</li>
  <li>等等</li>
</ol>

<h4 id="六总结">六.总结</h4>

<h3 id="重点模拟冲突即解决冲突合并分支">重点:模拟冲突即解决冲突,合并分支</h3>

<hr />

<h3 id="版块四胡俢廷">版块四–胡俢廷</h3>

<h4 id="1案例互动及讲解一个比如加法问题">1.案例互动及讲解一个,比如加法问题</h4>

<h4 id="2课后思考题一个">2.课后思考题一个;</h4>

:ET